#+TITLE: Maker's Linux Configs
#+PROPERTY: header-args: :noweb yes
#+created: [2022-07-18 Mon 16:04]
#+last_modified: [2022-07-25 Mon 15:17]

* What Is This?
  These are just my personal configs for my arch linux setup. Feel free to use or modify
  them in anyway. Please note I have included a =Xmodmap= config file to swap left ctrl
  and left alt as that is how I like it. I know this is unconventional so I don't have
  it setup by default. If you would like to use this keyboard config just move the =Xmodmap=
  file to =~/.Xmodmap=.

  I'm trying to update this repo to [[https://github.com/TheLocehiliosan/yadm][yadm]]. For the moment this entire repo is
  *WIP*. With that out of the way lets build out our ~yadm~ bootstrap file.

* Install arch
  This entire section is *WIP* at the moment:

  lsblk
  fdisk /dev/vda
  mkfs.fat -F32 /dev/vda1
  mkswap /dev/vda2
  swapon /dev/vda2
  mkfs.btrfs /dev/vda3
  mount /dev/vda3 /mnt
  btrfs subvolume create /mnt/@
  btrfs subvolume create /mnt/@home
  btrfs subvolume create /mnt/@snapshots
  btrfs subvolume create /mnt/@var_log
  umount /mnt
  mount -o noatime,compress=lzo,space_cache=v2,subvol=@ /dev/vda3 /mnt
  mkdir -p /mnt/{boot,home,.snapshots,var_log}
  mount -o noatime,compress=lzo,space_cache=v2,subvol=@home /dev/vda3 /mnt/home
  mount -o noatime,compress=lzo,space_cache=v2,subvol=@snapshots /dev/vda3 /mnt/.snapshots
  mount -o noatime,compress=lzo,space_cache=v2,subvol=@var_log /dev/vda3 /mnt/var_log
  mount /dev/vda1 /mnt/boot
  lsblk
  basestrap /mnt base base-devel runit linux linux-firmware emacs git sudo elogind-runit
  fstabgen -U /mnt >> /mnt/etc/fstab
  artix-chroot /mnt

  # edit pacman mirror list to prioritize US
  emacs /etc/pacman.d/mirrorlist

  # set timezone
  ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
  hwclock --systohc

  # set locale
  emacs /etc/locale.gen
  locale-gen
  emacs /etc/locale.conf
  # LANG=en_US.UTF-8

  # install networkmanager
  pacman -S networkmanger-runit
  # this has to be done this since we haven't booted off this machine
  ln -s /etc/runit/sv/NetworkManger /etc/runit/runsvdir/current

  # setup hostname
  emacs /etc/hostname
  emacs /etc/hosts

  # configure mkinitcpio
  emacs /etc/mkinitcpio.conf
  # add the following:
  # MODULE=(btrfs)
  mkinitcpio -p linux

  # setup grub
  pacman -S grub efibootmgr
  grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
  grub-mkconfig -o /boot/grub/grub.cfg

  # set root passwd
  passwd

  # setup sudo
  pacman -S sudo
  EDITOR="emacs -nw" visudo

  # create user
  useradd -mG wheel epost
  passwd epost

  With all of that done we can reboot into our new system.

* Installing yadm
  git clone https://aur.archlinux.org/yadm
  cd yadm
  makepkg -si
  cd ..
  rm -rf yadm

* Execute bootstrap
  :PROPERTIES:
  :HEADER-ARGS: :tangle ~/.config/yadm/bootstrap :shebang "#!/bin/bash" :exports code :mkdirp yes
  :CUSTOM_ID: ExecuteBootstrap
  :END:
  Since I am using ~yadm~ I can create a bootstrap file to bootstrap my
  system. The first thing I will do is install [[https://github.com/Morganamilo/paru][paru]] my favorite AUR package
  manager:
  #+begin_src bash
    sudo pacman -Sy --needed base-devel --noconfirm;

    which paru > /dev/null 2>&1;

    if [ $? -ne 0 ];
    then
      git clone https://aur.archlinux.org/paru-bin.git;
      cd paru-bin;
      makepkg -si --noconfirm;
      cd ..;
      rm -rf paru-bin;
    fi

    paru -S paru-bin --needed --noconfirm --skipreview;
  #+end_src

** Configure pacman
   In this section I am going to enable the universe artix repository We are
   also going to install the ~artix-archlinux-support~ package, which adds some
   of the repositories arch linux has, but are not yet on artix:
   #+begin_src bash
     grep -qxF '[universe]' /etc/pacman.conf || sudo tee -a /etc/pacman.conf >/dev/null << 'EOF'
     [universe]
     Server = https://universe.artixlinux.org/$arch
     Server = https://mirror1.artixlinux.org/universe/$arch
     Server = https://mirror.pascalpuffke.de/artix-universe/$arch
     Server = https://artixlinux.qontinuum.space/artixlinux/universe/os/$arch
     Server = https://mirror1.cl.netactuate.com/artix/universe/$arch
     Server = https://ftp.crifo.org/artix-universe/
     EOF

     sudo pacman -Sy --needed artix-archlinux-support --noconfirm

     grep -qxF '# Arch' /etc/pacman.conf || sudo tee -a /etc/pacman.conf >/dev/null << 'EOF'

     # Arch
     [extra]
     Include = /etc/pacman.d/mirrorlist-arch

     [community]
     Include = /etc/pacman.d/mirrorlist-arch

     [multilib]
     Include = /etc/pacman.d/mirrorlist-arch
     EOF
   #+end_src

** Install Packages
   With ~paru~ installed next I want to install all of the packages I use on my
   system. Lets start by making a list of all the packages I want to install:
   #+name: packages-list
   | Package              | Description                      |
   |----------------------+----------------------------------|
   | alacritty            | My favorite terminal emulator    |
   | brave-bin            | My favorite web browser          |
   | exa                  | A rust implmentation of ls       |
   | fish                 | An alternative shell             |
   | gdm-runit            | Gnome display manager            |
   | gnome-control-center | Gnome configuration              |
   | gnome-keyring        | Keyring for Gnome                |
   | gnome-shell          | Gnome desktop environment        |
   | gnome-tweaks         | Tweaks for Gnome                 |
   | ispell               |                                  |
   | openssh-runit        | Open ssh for runit               |
   | neofetch             | Provides system info in terminal |
   | pyenv                | Manages python versions          |
   | tfenv                | Manages terraform versions       |
   | ttf-fira-code        | My font for emacs                |
   | yadm                 | Used to manage my dot files      |
   | yamllint             | Linter for yaml files            |

   #+name: make-package-list
   #+header: :exports none :wrap "src bash :exports none"
   #+begin_src emacs-lisp :var packages=packages-list[,0] :tangle no
     (concat
      "paru -S --needed --noconfirm --skipreview \\\n"
      (mapconcat #'identity packages " \\\n")
      ";")
   #+end_src

   #+RESULTS: make-package-list
   #+begin_src bash :exports none
   paru -S --needed --noconfirm --skipreview \
   alacritty \
   brave-bin \
   exa \
   fish \
   gdm-runit \
   gnome-control-center \
   gnome-keyring \
   gnome-shell \
   gnome-tweaks \
   ispell \
   openssh-runit \
   neofetch \
   pyenv \
   tfenv \
   ttf-fira-code \
   yadm \
   yamllint;
   #+end_src

** Set user shell to fish
   The fish shell is my perferred shell so I set it as my default shell.
   #+begin_src bash
     if [[ $(cat /etc/passwd | grep epost | awk -F: '{print $7}') != '/usr/bin/fish' ]];
     then
       chsh -s /usr/bin/fish;
     fi
   #+end_src

** Enable services
   Enable services with runit.
   #+begin_src bash
     if [ ! -L /run/runit/service/sshd ];
     then
       sudo ln -s /etc/runit/sv/sshd /run/runit/service/
     fi

     if [ ! -L /run/runit/service/gdm ];
     then
       sudo ln -s /etc/runit/sv/gdm /run/runit/service/
     fi
   #+end_src

** Update NetworkManger config
   This section is just to disable ~auth-polkit~ for ~NetworkManger~ because I
   have encountered authentication errors with artix:
   #+begin_src bash
     grep -qxF 'auth-polkit=false' /etc/NetworkManager/NetworkManager.conf || sudo tee -a /etc/NetworkManager/NetworkManager.conf >/dev/null << 'EOF'
     auth-polkit=false
     EOF
   #+end_src
