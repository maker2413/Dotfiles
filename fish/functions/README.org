#+TITLE: Fish Functions
#+PROPERTY: header-args

Fish scripts in this directory will be loaded when fish boots. These simple scripts are just functions
that I have made for my environment. The peco functions are inspired by: [[https://github.com/craftzdog/dotfiles-public][craftzdog's dotfiles]].

I'll first cover peco_directory:
#+BEGIN_SRC fish :tangle peco_directory.fish
function _peco_directory
  if [ (count $argv) ]
    peco --layout=bottom-up --query "$argv " | perl -pe 's/([ ()])/\\\\$1/g' | read foo
  else
    peco --layout=bottom-up | perl -pe 's/([ ()])/\\\\$1/g' | read foo
  end
  if [ $foo ]
    builtin cd $foo
  else
    commandline ''
  end
end

function peco_directory
  begin
    echo $HOME/.config
    echo $HOME/Code
    ls -ad */ | perl -pe "s#^#$PWD/#"
    ls -ad $HOME/Code/*
  end | sed -e 's/\/$//' | awk '!a[$0]++' | _peco_directory $argv
end
#+END_SRC
This function will ...

My next function is peco_history:
#+BEGIN_SRC fish :tangle peco_history.fish
function peco_history
  if test (count $argv) = 0
    set peco_flags --layout=bottom-up
  else
    set peco_flags --layout=bottom-up --query "$argv"
  end

  history | peco $peco_flags | read run

  if [ $run ]
    commandline $run
  else
    commandline ''
  end
end
#+END_SRC
This function will pass ~history~ into ~peco~ and will pass it flags based on whether this function was
passed any arguments. Once you make your selection from the newly popped open peco menu it will pass
your choice into a variable and run the command if it exists. This is compared to the history search
hotkey in zsh.
